# Nodejs Express demo



## Docker-compose

Use docker-compose to startup a database of choice :

* MongoDB
```
docker-compose up -d mongodb
```

* ArangoDB
```
docker-compose up -d arangodb
```


## Database

### MongoDB setup


```
â†’ docker exec -it nodejsdemo_mongodb_1 bash
root@mongodb:/# mongo
MongoDB shell version v3.6.0
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.0
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
http://docs.mongodb.org/
Questions? Try the support group
http://groups.google.com/group/mongodb-user
Server has startup warnings:
2017-12-26T23:40:15.663+0000 I STORAGE  [initandlisten]
2017-12-26T23:40:15.663+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2017-12-26T23:40:15.663+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2017-12-26T23:40:15.879+0000 I CONTROL  [initandlisten]
2017-12-26T23:40:15.879+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2017-12-26T23:40:15.879+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2017-12-26T23:40:15.879+0000 I CONTROL  [initandlisten]
2017-12-26T23:40:20.694+0000 E -        [main] Error loading history file: FileOpenFailed: Unable to fopen() file /root/.dbshell: No such file or directory
> use node
switched to db node
> db.createUser({user:'loopback', pwd:'loopback', roles:[{role:'readWrite', db:'node'}]})
Successfully added user: {
"user" : "loopback",
"roles" : [
  {
    "role" : "readWrite",
    "db" : "node"
  }
]
}
>
```

## ArangoDB setup

```
docker exec -it nodejsdemo_arangodb_1 bash

root@arangodb:/# arangosh
Please specify a password: password


127.0.0.1:8529@_system> db._createDatabase("node");
true

127.0.0.1:8529@_system> var users = require("@arangodb/users");

127.0.0.1:8529@_system> users.save("node@node", "password");
{
  "user" : "node@node",
  "active" : true,
  "extra" : {
  },
  "code" : 201
}

127.0.0.1:8529@_system> users.grantDatabase("node@node", "node");

```


Access to the database using node@node :

```
arangosh --server.username "node@node" --server.database node
```

Using web interface (http://localhost:8529)[http://localhost:8529/]
